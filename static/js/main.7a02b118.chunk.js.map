{"version":3,"sources":["CircleButton/CircleButton.js","notes-helpers.js","NoteListNav/NoteListNav.js","NotePageNav/NotePageNav.js","Note/Note.js","NoteListMain/NoteListMain.js","NotePageMain/NotePageMain.js","history.js","AddFolder/AddFolder.js","AddNote/AddNote.js","ErrorBoundary.js","App/App.js","index.js"],"names":["NavCircleButton","props","tag","className","children","otherProps","React","createElement","join","defaultProps","findNote","notes","noteId","find","note","id","countNotesForFolder","folderId","filter","length","NoteListNav","this","folders","map","folder","NavLink","to","name","Link","type","icon","Component","NotePageNav","role","onClick","history","goBack","Note","format","modified","NoteListMain","NotePageMain","content","split","para","i","createBrowserHistory","AddFolder","state","onSubmit","event","preventDefault","postJson","fetch","headers","method","body","JSON","stringify","then","response","json","htmlFor","value","AddNote","onChange","evt","setState","target","placeholder","x","disabled","ErrorBoundary","hasError","App","apiFolders","apiNotes","path","Route","exact","render","routeProps","match","params","findFolder","notesForFolder","getNotesForFolder","component","renderNavRoutes","renderMainRoutes","library","add","faPlus","faChevronLeft","faTrashAlt","faCheckDouble","ReactDOM","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.7a02b118.chunk.js","sourcesContent":["import React from 'react'\nimport './CircleButton.css'\nimport PropTypes from 'prop-types'\n\nexport default function NavCircleButton (props) {\n  const {tag, className, children, ...otherProps} = props\n\n  return React.createElement(\n    props.tag,\n    {\n      className: ['NavCircleButton', props.className].join(' '),\n      ...otherProps\n    },\n    props.children\n  )\n}\n\nNavCircleButton.defaultProps = {\n  tag: 'a'\n}\n\nNavCircleButton.propTypes = {\n  tag: PropTypes.func.isRequired,\n  className: PropTypes.string.isRequired,\n  children: PropTypes.array.isRequired\n}\n","\nexport const findFolder = (folders = [], folderId) =>\n  folders.find(folder => folder.id === folderId)\n\nexport const findNote = (notes = [], noteId) =>\n  notes.find(note => note.id === noteId)\n\nexport const getNotesForFolder = (notes = [], folderId) => (\n  (!folderId)\n    ? notes\n    : notes.filter(note => note.folderId === folderId)\n)\n\nexport const countNotesForFolder = (notes = [], folderId) =>\n  notes.filter(note => note.folderId === folderId).length\n","import React from 'react'\nimport {NavLink, Link} from 'react-router-dom'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport {countNotesForFolder} from '../notes-helpers'\nimport './NoteListNav.css'\nimport PropTypes from 'prop-types'\n\nexport default class NoteListNav extends React.Component {\n  render () {\n    return (\n      <div className='NoteListNav'>\n        <ul className='NoteListNav__list'>\n          {this.props.folders.map(folder =>\n            <li key={folder.id}>\n              <NavLink\n                className='NoteListNav__folder-link'\n                to={`/folder/${folder.id}`}\n              >\n                <span className='NoteListNav__num-notes'>\n                  {countNotesForFolder(this.props.notes, folder.id)}\n                </span>\n                {folder.name}\n              </NavLink>\n            </li>\n          )}\n        </ul>\n        <div className='NoteListNav__button-wrapper'>\n          <CircleButton\n            tag={Link}\n            to='/add-folder'\n            type='button'\n            className='NoteListNav__add-folder-button'\n          >\n            <FontAwesomeIcon icon='plus' />\n            <br />\n            Folder\n          </CircleButton>\n        </div>\n      </div>\n    )\n  }\n}\n\nNoteListNav.defaultProps = {\n  folders: []\n}\n\nNoteListNav.propTypes = {\n  folders: PropTypes.array.isRequired,\n  notes: PropTypes.array.isRequired\n}\n","import React from 'react'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport './NotePageNav.css'\nimport PropTypes from 'prop-types'\n\nexport default function NotePageNav (props) {\n  return (\n    <div className='NotePageNav'>\n      <CircleButton\n        tag='button'\n        role='link'\n        onClick={() => props.history.goBack()}\n        className='NotePageNav__back-button'\n      >\n        <FontAwesomeIcon icon='chevron-left' />\n        <br />\n        Back\n      </CircleButton>\n      {props.folder && (\n        <h3 className='NotePageNav__folder-name'>\n          {props.folder.name}\n        </h3>\n      )}\n    </div>\n  )\n}\n\nNotePageNav.defaultProps = {\n  history: {\n    goBack: () => {}\n  }\n}\n\nNotePageNav.propTypes = {\n  history: PropTypes.object.isRequired,\n  folder: PropTypes.object.isRequired\n}\n","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport {format} from 'date-fns'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport './Note.css'\nimport PropTypes from 'prop-types'\n\nexport default function Note (props) {\n  return (\n    <div className='Note'>\n      <h2 className='Note__title'>\n        <Link to={`/note/${props.id}`}>\n          {props.name}\n        </Link>\n      </h2>\n      <button className='Note__delete' type='button'>\n        <FontAwesomeIcon icon='trash-alt' />\n        {' '}\n        remove\n      </button>\n      <div className='Note__dates'>\n        <div className='Note__dates-modified'>\n          Modified\n          {' '}\n          <span className='Date'>\n            {format(props.modified, 'Do MMM YYYY')}\n          </span>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nNote.propTypes = {\n  name: PropTypes.string.isRequired,\n  modified: PropTypes.string,\n  id: PropTypes.string.isRequired\n}\n","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport Note from '../Note/Note'\nimport CircleButton from '../CircleButton/CircleButton'\nimport './NoteListMain.css'\nimport PropTypes from 'prop-types'\n\nexport default class NoteListMain extends React.Component {\n  render () {\n    return (\n      <section className='NoteListMain'>\n        <ul>\n          {this.props.notes.map(note =>\n            <li key={note.id}>\n              <Note\n                id={note.id}\n                name={note.name}\n                modified={note.modified}\n              />\n            </li>\n          )}\n        </ul>\n        <div className='NoteListMain__button-container'>\n          <CircleButton\n            tag={Link}\n            to='/add-note'\n            type='button'\n            className='NoteListMain__add-note-button'\n          >\n            <FontAwesomeIcon icon='plus' />\n            <br />\n            Note\n          </CircleButton>\n        </div>\n      </section>\n    )\n  }\n}\n\nNoteListMain.defaultProps = {\n  notes: []\n}\n\nNoteListMain.propTypes = {\n  notes: PropTypes.array.isRequired\n}\n","import React from 'react'\nimport Note from '../Note/Note'\nimport './NotePageMain.css'\nimport PropTypes from 'prop-types'\n\nexport default function NotePageMain (props) {\n  return (\n    <section className='NotePageMain'>\n      <Note\n        id={props.note.id}\n        name={props.note.name}\n        modified={props.note.modified}\n      />\n      <div className='NotePageMain__content'>\n        {props.note.content.split(/\\n \\r|\\n/).map((para, i) =>\n          <p key={i}>{para}</p>\n        )}\n      </div>\n    </section>\n  )\n}\n\nNotePageMain.defaultProps = {\n  note: {\n    content: ''\n  }\n}\n\nNotePageMain.propTypes = {\n  note: PropTypes.object.isRequired\n}\n","import {createBrowserHistory} from 'history'\n\nexport default createBrowserHistory()\n","import './AddFolder.css'\nimport React from 'react'\nimport history from '../history'\nconst url = 'http://localhost:9090/folders'\n\nexport default class AddFolder extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      name: ''\n    }\n  }\n\n  render () {\n    const handleSubmit = (event) => {\n      event.preventDefault()\n      const folderName = this.state\n      const postJson = {name: folderName}\n      fetch(url, {\n        headers: {'Content-Type': 'application/json'},\n        method: 'Post',\n        body: JSON.stringify(postJson)\n      })\n        .then(response => response.json())\n        .then(json => { history.goBack() })\n    }\n\n    return (\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"new-folder-button\"> Add New Folder\n          <input type=\"text\" name=\"new-folder-button\" value={this.state.name}/>\n        </label>\n        <input className=\"submit-button\" type=\"submit\" value=\"Submit\"/>\n      </form>\n    )\n  }\n}\n","import React from 'react'\nimport './AddNote.css'\nimport PropTypes from 'prop-types'\nimport history from '../history'\n\nconst url = 'http://localhost:9090/notes'\n\nexport default class AddNote extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      name: '',\n      folderId: '',\n      content: ''\n    }\n  }\n\n  render () {\n    const handleSubmit = (event) => {\n      event.preventDefault()\n      const postJson = this.state\n      fetch(url, {\n        headers: {'Content-Type': 'application/json'},\n        method: 'Post',\n        body: JSON.stringify(postJson)\n      })\n        .then(response => response.json())\n        .then(json => { history.goBack() })\n    }\n\n    return (\n      <container className = \"AddNote\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"NoteInput\">\n            <label htmlFor=\"new-note-button\"> Add New Note\n              <input type=\"text\" name=\"new-note-button\" value={this.state.name} onChange = {(evt) => { this.setState({name: evt.target.value}) }}/>\n            </label>\n            <div className=\"Notecontent\">\n              <label htmlFor=\"new-note-content\"> Content :\n                <textarea type=\"text\" name=\"new-note-content\" value={this.state.content} onChange = {(evt) => { this.setState({content: evt.target.value}) }}/>\n              </label>\n            </div>\n            <select placeholder=\"Select Folder\" value={this.state.folderId} onChange = {(evt) => { this.setState({folderId: evt.target.value}) }}>\n              <option key=\"Select Folder\">Select Folder</option>\n              {this.props.folders.map((x) => {\n                return (\n                  <option key={x.id} value={x.id}> {x.name}</option>\n                )\n              })}\n            </select>\n            <input className=\"submit-button\" type=\"submit\" value=\"Submit\" disabled={!(this.state.name.length > 0 && this.state.content.length > 3)}/>\n          </div>\n        </form>\n      </container>\n    )\n  }\n}\n\nAddNote.propTypes = {\n  folders: PropTypes.array.isRequired\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport default class ErrorBoundary extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      hasError: false\n    }\n  }\n\n  static getDerivedStateFromError () {\n    return {hasError: true}\n  }\n\n  render () {\n    if (this.state.hasError) {\n      return (\n        <h2> There is an Error. Please refresh page.</h2>\n      )\n    }\n    return this.props.children\n  }\n}\n\nErrorBoundary.propTypes = {\n  children: PropTypes.array.isRequired\n}\n","import React, {Component} from 'react'\nimport {Route, Link} from 'react-router-dom'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport NoteListNav from '../NoteListNav/NoteListNav'\nimport NotePageNav from '../NotePageNav/NotePageNav'\nimport NoteListMain from '../NoteListMain/NoteListMain'\nimport NotePageMain from '../NotePageMain/NotePageMain'\nimport {getNotesForFolder, findNote, findFolder} from '../notes-helpers'\nimport './App.css'\nimport AddFolder from '../AddFolder/AddFolder'\nimport AddNote from '../AddNote/AddNote'\nimport ErrorBoundary from '../ErrorBoundary'\n\nclass App extends Component {\n  state = {\n    notes: [],\n    folders: []\n  };\n\n  componentDidMount () {\n    const url = 'http://localhost:9090/folders'\n    fetch(url)\n      .then(response => response.json())\n      .then(apiFolders => this.setState({folders: apiFolders}))\n\n    const api = 'http://localhost:9090/notes'\n    fetch(api)\n      .then(response => response.json())\n      .then(apiNotes => this.setState({notes: apiNotes}))\n  }\n\n  renderNavRoutes () {\n    const {notes, folders} = this.state\n    return (\n      <ErrorBoundary>\n        {['/', '/folder/:folderId'].map(path => (\n          <Route\n            exact\n            key={path}\n            path={path}\n            render={routeProps => (\n              <NoteListNav\n                folders={folders}\n                notes={notes}\n                {...routeProps}\n              />\n            )}\n          />\n        ))}\n        <Route\n          path=\"/note/:noteId\"\n          render={routeProps => {\n            const {noteId} = routeProps.match.params\n            const note = findNote(notes, noteId) || {}\n            const folder = findFolder(folders, note.folderId)\n            return <NotePageNav {...routeProps} folder={folder} />\n          }}\n        />\n      </ErrorBoundary>\n    )\n  }\n\n  renderMainRoutes () {\n    const {folders, notes} = this.state\n    return (\n      <ErrorBoundary>\n        {['/', '/folder/:folderId'].map(path => (\n          <Route\n            exact\n            key={path}\n            path={path}\n            render={routeProps => {\n              const {folderId} = routeProps.match.params\n              const notesForFolder = getNotesForFolder(\n                notes,\n                folderId\n              )\n              return (\n                <NoteListMain\n                  {...routeProps}\n                  notes={notesForFolder}\n                />\n              )\n            }}\n          />\n        ))}\n        <Route\n          path=\"/note/:noteId\"\n          render={routeProps => {\n            const {noteId} = routeProps.match.params\n            const note = findNote(notes, noteId)\n            return <NotePageMain {...routeProps} note={note} />\n          }}\n        />\n        <Route path=\"/add-folder\" component={AddFolder} />\n        <Route path=\"/add-note\" render={routeProps => {\n          return <AddNote folders={folders} />\n        }}/>\n      </ErrorBoundary>\n    )\n  }\n\n  render () {\n    return (\n      <div className=\"App\">\n        <nav className=\"App__nav\">{this.renderNavRoutes()}</nav>\n        <header className=\"App__header\">\n          <h1>\n            <Link to=\"/\">Noteful</Link>{' '}\n            <FontAwesomeIcon icon=\"check-double\" />\n          </h1>\n        </header>\n        <main className=\"App__main\">{this.renderMainRoutes()}</main>\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {library} from '@fortawesome/fontawesome-svg-core'\nimport {\n  faPlus, faChevronLeft, faTrashAlt, faCheckDouble\n} from '@fortawesome/free-solid-svg-icons'\nimport {BrowserRouter} from 'react-router-dom'\nimport 'typeface-roboto'\nimport './index.css'\nimport App from './App/App'\nimport history from './history'\n\nlibrary.add(faPlus, faChevronLeft, faTrashAlt, faCheckDouble)\n\nReactDOM.render(\n  <BrowserRouter history={history}>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}